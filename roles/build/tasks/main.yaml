- name: 'Initalizing task with variables'
  set_fact:
    b_version: "{{ semaphore_vars.task_details.target_version | int }}"
    component_path: "/opt/semaphore_data/builds/elastic-component-v{{ semaphore_vars.task_details.target_version }}"

- name: 'Get source code and setup runner for work'
  block:
    - name: 'Check if generic build directory exists'
      ansible.builtin.file:
        path: '/opt/semaphore_data/builds/'
        state: directory

    - name: 'Delete if component directory exists: <v{{ b_version }}>'
      ansible.builtin.file:
        path: "{{ component_path }}"
        state: absent

    - name: 'Clone the elastic-component settigns: <v{{ b_version }}>'
      ansible.builtin.git:
        repo: '{{ components_repo }}'
        dest: "{{ component_path }}"

- name: 'Load settings and components'
  include_tasks: load.yaml

- name: 'Combine settings and components'
  include_tasks: combine.yaml

- name: 'Make jsons (unpacked build)'
  include_tasks: make_jsons.yaml

- name: 'Test components'
  block:
    - name: 'Set elastic_test_host as curr_elastic_host'
      set_fact:
        curr_elastic_host: '{{ elastic_test_host  }}'
    
    - name: 'Check configuration on test host'
      include_tasks: update.yaml

- block:
    - debug:
        msg: "Configs are OK"

    - name: 'Mark build as good'
      file:
        path: "{{ component_path }}/.good_build"
        state: touch
      
        modification_time: preserve
        access_time: preserve

  when: update_status == 0

- name: 'Configs are bad. Doing rollback'
  block:
    - name: Check for file and decrement b_version
      vars:
        fp: "/opt/semaphore_data/builds/elastic-component-v{{ item }}/.good_build"
      stat:
        path: "{{ fp }}"

      register: file_result
      loop: "{{ range(b_version|int, -1, -1) | list }}"

    - set_fact:
        backups: "{{ file_result.results | json_query('[?stat.exists].stat.path') }}"
    
    - fail:
        msg: "No good builds found. Rollback failed"
      when: (backups | length) == 0

    - block:
        - debug:
            msg: "Found rollback: {{ new_path }}"

        - name: "Update component_path for initializing backup process" 
          set_fact:
            component_path: "{{ new_path }}"

        - name: "Run update with correct templates"
          include_tasks: "update.yaml"

      vars:
        new_path: "{{ backups[0] | dirname }}"

      when: (backups | length) > 0

  when: update_status != 0