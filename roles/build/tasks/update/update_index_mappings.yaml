# Updates index mappings on target host
# Arguments:
#   component_path: path to current version
#   curr_elastic_host: where to apply components
#   elastic_user: str
#   elastic_password: str
#   
# Returns:
#   update_status: 0 - ok, >0 - fail 


- block:
  - name: 'Get built index mappings paths' # (dict(target, settings))
    ansible.builtin.find:
      paths: "{{ component_path }}/jsons/index_mappings"
      patterns: '*.json'
    register: list

  - name: 'Filter unchanged components'
    include_tasks: filter_components.yaml

  - name:
    set_fact:
      ima_content: "{{ [] }}"

  - name: 'Get content of index mappings'
    set_fact:
      ima_content: "{{ ima_content + [ima_obj]}}"

    loop: "{{ prepared_list }}"
    loop_control:
      loop_var: curr_file
    vars:
      ima_obj: "{{ lookup('ansible.builtin.file', curr_file) | from_json }}"

  - name: 'Apply component in loop'
    ansible.builtin.uri:
      url: "{{ curr_elastic_host }}/{{ ima_target }}/_mapping"
      validate_certs: False

      body: "{{ ima_data }}"
      body_format: json
      method: "PUT"

      user: "{{ elastic_user }}"
      password: "{{ elastic_password }}"
      force_basic_auth: True
  
    vars:
      ima_data: "{{ ima.settings | to_json }}"
      ima_target: "{{ ima.target }}"
    
    register: result
    ignore_errors: true

    loop: "{{ ima_content }}"
    loop_control:
      loop_var: ima

  - name: 'Enrich with update_status'
    include_tasks: update_status.yaml
    when: not is_rollback